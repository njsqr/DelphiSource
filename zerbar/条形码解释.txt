unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, strutils;

type
  TForm1 = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Edit1: TEdit;
    cbx1: TComboBox;
    Edit2: TEdit;
    cbx2: TComboBox;
    Memo1: TMemo;
    Button1: TButton;
    Button2: TButton;
    Memo2: TMemo;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;
function GETFONTHEX(chnstr: string; fontname: string; orient: integer; height: integer; width: integer; bold: integer; italic: integer; hexbuf: string): integer; stdcall; external 'fnthex32.dll';
function PrtChnStr(x, y: integer; fontname: string; height, xmf, ymf: integer; chnstr: string): string;

var
  Form1: TForm1;

implementation

{$R *.dfm}
function PrtChnStr(x, y: integer; fontname: string; height, xmf, ymf: integer; chnstr: string): string;
var
  buf, ret: string;
  count: integer;
begin
  result := '';
  setlength(buf, 21 * 1024);
  count := GETFONTHEX(chnstr, fontname, 0, height, 0, 1, 0, buf);
  if count > 0 then
  begin
    ret := Copy(buf, 1, count);
    result := ret + '^FO' + inttostr(x) + ',' + inttostr(y) + '^XGOUTSTR01,' + inttostr(xmf) + ',' + inttostr(ymf) + '^FS';
  end;
end;


procedure TForm1.Button1Click(Sender: TObject);
var
  prtstr, code: string;
begin
  if cbx1.Text = 'Code 11' then
    code := '^B1'
  else if cbx1.Text = 'Code 39' then
    code := '^B3'
  else if cbx1.Text = 'Code 49' then
    code := '^B4'
  else if cbx1.Text = 'Code 93' then
    code := '^BA'
  else if cbx1.Text = 'Code 128' then
    code := '^BC'
  else if cbx1.Text = 'EAN-8' then
    code := '^B8';
  prtstr := '^XA^IA6^XZ^FS^XA^FS^BY2,2^LH20,23^FS';
  prtstr := prtstr + '^FO' + '30,25' + code + ',' + '120^AEN^FD' + trim(Edit1.Text) + '^FS';
  prtstr := prtstr + PrtChnStr(10, 140, pchar(cbx2.Text), 14, 1, 2, pchar(Leftstr(Edit2.Text, 18)));
  prtstr := prtstr + '^PQ1^FS'; //打印1份
  prtstr := prtstr + '^PRC^FS^XZ^FS^XA^EG^XZ'; //打印结束
  Memo1.lines.clear;
  Memo1.lines.Add(prtstr);
end;

{//* ^FDBL0000^SFAAdddd,1
  注：
The print sequence on this series of labels is:
BL0000, BL0001,...BL0009, BL0010,... 
BL0099, BL0100,...BL9999, BM0000... 

^FDBL00-0^SFAAdd%d,1%1
 注：
The print sequence on this series of labels is: 
BL00-0, BL01-1, BL02-2,...BL09-9, 
BL11-0, BL12-1... 

   D or d ? Decimal numeric 0?9
   H or h ? Hexadecimal 0?9 plus a-f or A-F
   O or o ? Octal 0?7
   A or a ? Alphabetic a?z or A?Z
   N or n ? Alphanumeric 0?9 plus a?z or A?Z
        % ? Ignore character or skip 


 '^FO' + '30,25' + code + ',' + '170^FD' + trim(Edit1.Text) + '^FS';
 注：                           码高，

 PrtChnStr(10, 140, pchar(cbx2.Text), 14, 1, 2, pchar(Leftstr(Edit2.Text, 18)));
 注：     x轴，y轴， 字体        ，字号,加粗,加大，      字符串         ，打印位数；

 说说有关于斑马条码打印机ZPL编程语言该如何使用吧，下面就先给个简单实例：
 ^XA          注：一个标签已经准备好
 ^LH50,30     注：设置一个标签的打印原点即距标签左边距为50DOT，上边距30DOT
 ^FO40,30^AD^FDZEBRA^FS
 注： ^FO40,30设置距打印原点为40，30的打印位置。^AD选择打印字体
          ^FDTEST打印的内容为TEST，^FS该字段打印结束
 ^FO70,60^B3^FDAAA001^FS
 注：^B3，选择打印条码类型，B3代表Code 39码，内容为ABC123
^XZ     注：表明打印结束

把以上的COPY成一个文本文档如TEST.TXT文件再进入CMD输入 print TEST.TXT 或者 copy TEST.TXT  LPT1就可以了 （LPT1表示并口），而且此方法可适用于测试所有带ZPL语言编程的斑马打印机打印端口是否能正常通讯


}

procedure TForm1.Button2Click(Sender: TObject);
var
  prtstr: string;
  filehandle: integer;
begin
  prtstr := Memo1.Text;
  filehandle := fileopen('LPT1', fmOpenWrite);
  if filehandle > 0 then
    filewrite(filehandle, prtstr[1], length(prtstr))
  else
    showmessage('打开并口错误');
  fileclose(filehandle);
end;

end.


斑马条码打印机打印汉字的DLL调用方法（VB下的调用）：在程序中加入以下代码：Private Declare Function GETFONTHEX Lib ".fnthex32.dll" (ByVal chnstr As String, ByVal fontname As String, ByVal orient As Integer, ByVal height As Integer, ByVal width As Integer, ByVal bold As Integer, ByVal italic As Integer, ByVal hexbuf As String) As Integer调用：Dim CBuf As String * 1024GETFONTHEX "打印内容", "宋体", 0, H,W, 0, 0, CBuf说明：打印内容，要打印的内容（字符型数据）；宋体，此处为要打印字符的字体名称；0，打印内容的旋转角度（0，90，180，270四种，H & W,要打印字符的高和宽的数据（数值型），粗体和斜体的设置，CBuf,打印内容的图象代码


为实现斑马打印机对汉字的打印，需调用Fnthex32.dll的函数GETFONTHEX()对汉字进行转换，但是调用此函数时，系统都异常中断，还请各位帮忙解决!

[相关线索]:

函数声明：/*Global External Functions*/
  function int GETFONTHEX(string outstr,string fontname,string outstrname,&
  int orient,int height,int width,int bold,int italic,&
  ref string hexbuf) library "fnthex32.dll"

函数调用：/*在BUTTON控件中CLICKED事件中添加*/
  integer int_filenum
  string named,cBuf

  GETFONTHEX("条码测试", "宋体", "chnstr01", 0, 50, 0, 1, 0, cBuf)  

  //测试汉字转换是否成功//
  named='test.txt'
  int_filenum=FileOpen(named,StreamMode!,write!,Lockwrite!,Append!)
  filewrite(int_filenum,cBuf)
  fileclose(int_filenum)

unit utBarcode; 

interface 

uses
Windows, Printers, Classes, SysUtils, Forms; 

procedure printBarcode(x, y: Integer; text: string; count: Integer=1); 

implementation
function GETFONTHEX(chnstr: string; fontname: string; orient: integer; height: integer; width: integer; bold: integer; italic: integer; hexbuf: string): integer; stdcall; external 'fnthex32.dll'; 

function PrtChnStr(x, y: integer; fontname: string; height, xmf, ymf: integer; chnstr: string): string;
var
buf, ret: string;
count: integer;
begin
result := '';
setlength(buf, 21 * 1024);
count := GETFONTHEX(chnstr, fontname, 0, height, 0, 1, 0, buf);
if count > 0 then
begin
ret := Copy(buf, 1, count);
result := ret + '^FO' + inttostr(x) + ',' + inttostr(y) + '^XGOUTSTR01,' + inttostr(xmf) + ',' + inttostr(ymf) + '^FS';
end;
end; 

procedure printBarcode(x, y: Integer; text: string; count: Integer=1);
var
F: TextFile;
ptrstr: String;
begin
ptrstr := '^XA';
ptrstr := ptrstr + '^FO';
ptrstr := ptrstr + inttostr(x) + ',' + inttostr(y);
ptrstr := ptrstr + '^BY4^B3N,N,150,Y,N^FD' + text + '^FS';
//ptrstr := ptrstr + '^A0,N,40' + PrtChnStr(30, 260, '黑体', 25, 1, 2, '中华人民共和国');
//ptrstr := ptrstr + PrtChnStr(10, 260, '黑体', 25, 1, 2, pchar(Edit3.Text));
ptrstr := ptrstr + '^PQ' + inttostr(count) + '^FS'; //打印1份
ptrstr := ptrstr + '^XZ'; //打印结束
//ptrstr := ptrstr + '^FS^XZ^FS^XA^EG^XZ'; //打印结束
assignfile(f,'lpt1');
rewrite(f);
write(f,ptrstr);
CloseFile(F);
end; 

end. 

解读一段ZPL II代码： 

ZPLII解读：
^XA
;标签起始位置
^MD25
;设置颜色深度为25，最高为30
^LH0,0
;标签起始位移
^LL992
;标签深度，即宽度
^FO147,639^BY3,3.0^B3N,,228,N^FDSMILE^FS
;在(147,639)处打印条码，条码内容为SMILE，高度为228，窄条宽度为3，宽窄条比例为3.0
^FO120,108^A0N,89^FDA Guide to^FS
;在(120,108)处打印文字，文字高度为89
^FO120,207^A0N,89^FDZPL II^FS
^FO120,306^A0N,89^FDProgramming^FS
^FO120,405^A0N,89^FDLanguage^FS
^FO696,149^A0R,71,66^FR^SN123456,1,Y^FS
;在(696,149)处打印文字123456，字体旋转90度，字体宽度为71，高度为66
^FO683,135^FR^GB0,216,108^FS
;在(683,135)处打印方框，框的长度为0，高度为216，厚度为108
^FO591,636^XGSMILE.GRF,1,1^FS
;打印图形，还不知道如何操作
^FO377,216^GSN,55,40^FDA^FS
;打印一个标志，不是很理解
^FO75,63^GB769,856,10^FS
;打印方框，长度为769，高度为856，厚度为10
^FO113,559^GB703,0,9^FS
;打印方框，长度为703，高度为0，厚度为9
^PQ1
;打印一份
^PR6
;设置打印速度为秒钟6英寸 

^XZ

